"{"cells":[{"cell_type":"markdown","metadata":{},"source":["\u003cp style=\"text-align:center\"\u003e\n","    \u003ca href=\"https://skills.network/?utm_medium=Exinfluencer\u0026utm_source=Exinfluencer\u0026utm_content=000026UJ\u0026utm_term=10006555\u0026utm_id=NA-SkillsNetwork-Channel-SkillsNetworkCoursesIBMDeveloperSkillsNetworkPY0101ENSkillsNetwork19487395-2022-01-01\" target=\"_blank\"\u003e\n","    \u003cimg src=\"https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/assets/logos/SN_web_lightmode.png\" width=\"200\" alt=\"Skills Network Logo\"  /\u003e\n","    \u003c/a\u003e\n","\u003c/p\u003e\n","\n","# Lab: Getting Started with Jupyter Notebooks\n","\n","Estimated time needed: **10** minutes\n","\n","## Objectives\n","\n","After completing this lab, you will be able to:\n","*   Get an overview of code and markdown cells\n","*   Execute an existing code cell\n","*   Insert and delete a code cell\n","*   Write comments in Python\n","*   Create and use Markdown cells\n"]},{"cell_type":"markdown","metadata":{},"source":["# Overview of Code and Markdown Cells\n","\n","A Jupyter notebook usually has many cells. A cell is an input field that allows you to enter multiple lines of text.\n","\n","There are two types of cells in a Jupyter notebook:\n","\n","* Markdown cell\n","* Code cell\n","\n","\u003cb\u003eMarkdown cell\u003c/b\u003e:\n","\u003cdiv style=\"padding-left: 30px;\"\u003e\n","Use Markdown cells to include text that should not be read and executed as language-specific code. You can include rich-text code descriptions of your code by entering and formatting the text in a Markdown cell.\u003cbr/\u003e\n","\n","Markdown cells allow us to apply several formatting options with the Markdown language: \n","\n","* Headings\n","* Links\n","* Tables\n","* Paragraphs\n","* Bold text\n","* Lists\n","* And more\n","\n","\u003c/div\u003e\n","\n"]},{"cell_type":"markdown","metadata":{},"source":["## This is an example of a markdown cell\n"]},{"cell_type":"markdown","metadata":{},"source":["\u003cb\u003eCode cell\u003c/b\u003e\n","\u003cdiv style=\"padding-left: 30px;\"\u003e\n","Use Code cells when you want to write and modify code. The default cell displayed in a Jupyter notebook is a Code cell.\n"]},{"cell_type":"code","execution_count":null,"metadata":{"trusted":true},"outputs":[],"source":["# This is an example of a code cell"]},{"cell_type":"markdown","metadata":{},"source":["# Exercise 1\n","## Say \"Hello\" to the world in Python\n"]},{"cell_type":"markdown","metadata":{},"source":["When learning a new programming language, it is customary to start with a \"hello world\" example. As simple as it is, this one line of code will ensure that we know how to print a string in output and how to execute code within cells in a notebook.\n"]},{"cell_type":"markdown","metadata":{},"source":["\u003chr/\u003e\n","\u003cdiv class=\"alert alert-success alertsuccess\" style=\"margin-top: 20px\"\u003e\n","💡 [Tip]: To execute the Python code in the code cell below, click the cell to select it and press \u003ckbd\u003eShift\u003c/kbd\u003e + \u003ckbd\u003eEnter\u003c/kbd\u003e.\n","\u003c/div\u003e\n","\u003chr/\u003e\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"trusted":true},"outputs":[],"source":["# Try your first Python output. Click here and press Shift + Enter to execute the cell\n","\n","'Hello, Python!'"]},{"cell_type":"markdown","metadata":{},"source":["After executing the cell above, you should see that Python prints \u003ccode\u003eHello, Python!\u003c/code\u003e. Congratulations on running your first Python code! \n"]},{"cell_type":"markdown","metadata":{},"source":["### Display an Integer\n"]},{"cell_type":"code","execution_count":null,"metadata":{"trusted":true},"outputs":[],"source":["# Print an integer\n","\n","2"]},{"cell_type":"markdown","metadata":{},"source":["### Mathematical Operations\n","\n","Now, run the following cells and observe the output of the mathematical operations.\n","\n","\u003cimg src=\"https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-DS0105EN-SkillsNetwork/labs/Labs_V4/images/run_1.png\"\u003e\n"]},{"cell_type":"code","execution_count":null,"metadata":{"trusted":true},"outputs":[],"source":["# Addition operation\n","2+2"]},{"cell_type":"code","execution_count":null,"metadata":{"trusted":true},"outputs":[],"source":["# Multiplication operation\n","2.5*3.5"]},{"cell_type":"markdown","metadata":{},"source":["# Exercise 2\n","### Create a new cell and execute it.\n","\n","In your Jupyter notebook, click the **+** symbol to insert a new cell.\n","\n","\u003cimg src=\"https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-DS0105EN-SkillsNetwork/labs/Labs_V4/images/insertcodecell.jpg\"\u003e\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"trusted":true},"outputs":[],"source":["# Create a new code cell below this cell and type in 4.5 and execute it"]},{"cell_type":"markdown","metadata":{},"source":["\u003cdetails\u003e\u003csummary\u003eClick here for the solution\u003c/summary\u003e\n","\n","```python\n","4.5\n","\n","```\n","The output looks as:\n","\n","\u003cimg src=\"https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-DS0105EN-SkillsNetwork/labs/Labs_V4/images/exe_sol.png\"\u003e\n","\n","\u003c/details\u003e\n"]},{"cell_type":"markdown","metadata":{},"source":["# Exercise 3\n","\n","### Delete a cell in Jupyter Notebook.\n","\n","Place your cursor at the cell given below. Click **Edit** and select **Delete cells**.\n","\n","\u003cimg src=\"https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-DS0105EN-SkillsNetwork/labs/Labs_V4/images/deletecells1.jpg\"\u003e\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"trusted":true},"outputs":[],"source":["## Select this cell and delete"]},{"cell_type":"markdown","metadata":{},"source":["The highlighted cell gets deleted.\n"]},{"cell_type":"markdown","metadata":{},"source":["# Exercise 4\n","### Writing comments in Python\n","\n","\u003cp\u003e\n","    In addition to writing code, note that it's always a good idea to add comments to your code. It will help others understand what you were trying to accomplish (why you wrote a given code snippet). Not only does this help \u003cstrong\u003eother people\u003c/strong\u003e understand your code, but it can also serve as a reminder \u003cstrong\u003eto you\u003c/strong\u003e when you come back to it weeks or months later.\u003c/p\u003e\n","\n","\u003cp\u003e\n","     To write comments in Python, use the number symbol \u003ccode\u003e#\u003c/code\u003e before writing your comment. Python will ignore everything past the \u003ccode\u003e#\u003c/code\u003e on a given line when you run your code.\n","\u003c/p\u003e\n"]},{"cell_type":"code","execution_count":null,"metadata":{},"outputs":[],"source":["# Execute this cell by clicking Shift + Enter\n","\n","2+3"]},{"cell_type":"markdown","metadata":{},"source":["After executing the above cell, you will find that the output \u003ccode\u003e5\u003c/code\u003e is generated on executing \u003ccode\u003e2+3\u003c/code\u003e\n"]},{"cell_type":"code","execution_count":null,"metadata":{},"outputs":[],"source":["# Execute this cell by clicking Shift + Enter\n","# 2+3"]},{"cell_type":"markdown","metadata":{},"source":["\u003chr/\u003e\n","\u003cdiv class=\"alert alert-success alertsuccess\" style=\"margin-top: 20px\"\u003e\n","\u003cp\u003e\n","  \n","After executing the above cell code \u003ccode\u003e2+3\u003c/code\u003e output \u003ccode\u003e5\u003c/code\u003e is not generated because \u003ccode\u003e2+3\u003c/code\u003e was preceeded by the number sign (\u003ccode\u003e#\u003c/code\u003e) and is treated as a comment.\n","\u003c/strong\u003e\n","\u003c/p\u003e\n","\n","\u003c/div\u003e\n"]},{"cell_type":"markdown","metadata":{},"source":["# Exercise 5\n","\n","### Using markdown cells\n","\n","Change the **Code** cell below to **Markdown** cell from the dropdown. \n","\n","\u003cimg src=\"https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-DS0105EN-SkillsNetwork/labs/Labs_V4/images/codetomarkdown.jpg\"\u003e\n","\n","Type in the text as **My First Markdown**\n"]},{"cell_type":"code","execution_count":null,"metadata":{"trusted":true},"outputs":[],"source":["# Change code cell to Markdown and write the text"]},{"cell_type":"markdown","metadata":{},"source":["\u003cdetails\u003e\u003csummary\u003eClick here for the solution\u003c/summary\u003e\n","\n","```python\n","My First Markdown\n","\n","```\n","The output look as:\n","\n","\u003cimg src=\"https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-DS0105EN-SkillsNetwork/labs/Labs_V4/images/outputmkdown.png\"\u003e\n","\u003c/details\u003e\n"]},{"cell_type":"markdown","metadata":{},"source":["Your markdown cell should now be rendered! _To edit your markdown cell, double-click anywhere within the cell._ \n"]},{"cell_type":"markdown","metadata":{},"source":["# Practice Exercises\n"]},{"cell_type":"markdown","metadata":{},"source":["### Task 1: Insert a new Markdown cell  with the text as **Evaluating Basic Arithmetic Expression**.\n"]},{"cell_type":"markdown","metadata":{},"source":["\u003cdetails\u003e\u003csummary\u003eClick here for the solution\u003c/summary\u003e\n","Evaluating Basic Arithmetic Expression\n","\n","Here we will be evaluating a basic arithmetic expression containing addition and multiplication operations.\n","\n","\u003c/details\u003e\n"]},{"cell_type":"markdown","metadata":{},"source":["### Task 2: Insert a new code cell below and use this **expression** \u003ccode\u003e(20+5)*4\u003c/code\u003e and **execute** it.\n"]},{"cell_type":"markdown","metadata":{},"source":["\u003cdetails\u003e\u003csummary\u003eClick here for the solution\u003c/summary\u003e\n","\n","```python\n","(20+5)*4\n","\n","```\n","\n","\u003c/details\u003e\n"]},{"cell_type":"markdown","metadata":{},"source":["#### Task 3: In the cell below, add a comment as **Displaying a string message**. Add the line \u003ccode\u003e\"Let us explore python without coding.\" \u003c/code\u003ebelow the comment and execute it \n"]},{"cell_type":"code","execution_count":null,"metadata":{},"outputs":[],"source":["## Write your markdown here"]},{"cell_type":"markdown","metadata":{},"source":["\u003cdetails\u003e\u003csummary\u003eClick here for the solution\u003c/summary\u003e\n","\n","```python\n","# Displaying a  string message\n","\"Let us explore python without coding\"\n","\n","```\n","\n","\u003c/details\u003e\n"]},{"cell_type":"markdown","metadata":{},"source":["#### (Bonus) Task 4: Split the code cell below after ```1+1```\n"]},{"cell_type":"code","execution_count":null,"metadata":{},"outputs":[],"source":["## Click after 1+1 in this cell and split it\n","1+1\n","2*2"]},{"cell_type":"markdown","metadata":{},"source":["\u003cdetails\u003e\u003csummary\u003eClick here for the hint\u003c/summary\u003e\n","\n","Use Edit menu and select Split Cell\n","\n","\u003cimg src=\"https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-DS0105EN-SkillsNetwork/labs/Labs_V4/images/splihint.png\"\u003e\n","\n","\u003c/details\u003e\n"]},{"cell_type":"markdown","metadata":{},"source":["\u003cdetails\u003e\u003csummary\u003eClick here for the solution\u003c/summary\u003e\n","\n","Click 2nd line and aplit it using Split Cell from Edit menu.\n","\n","\u003cimg src=\"https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-DS0105EN-SkillsNetwork/labs/Labs_V4/images/split1.png\"\u003e\n","\n","The solutions looks as:\n","\n","\u003cimg src=\"https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-DS0105EN-SkillsNetwork/labs/Labs_V4/images/splisol.png\"\u003e\n","\n","\n","\u003c/details\u003e\n"]},{"cell_type":"markdown","metadata":{},"source":["###  Thank you for completing this lab!\n"]},{"cell_type":"markdown","metadata":{},"source":["## Author\n","\n","[Lakshmi Holla](https://www.linkedin.com/in/lakshmi-holla-b39062149/?utm_medium=Exinfluencer\u0026utm_source=Exinfluencer\u0026utm_content=000026UJ\u0026utm_term=10006555\u0026utm_id=NA-SkillsNetwork-Channel-SkillsNetworkCoursesIBMDeveloperSkillsNetworkDS0105ENSkillsNetwork984-2022-01-01)\n","\n","[Malika Singla](https://www.linkedin.com/in/malika-goyal-04798622/?utm_medium=Exinfluencer\u0026utm_source=Exinfluencer\u0026utm_content=000026UJ\u0026utm_term=10006555\u0026utm_id=NA-SkillsNetwork-Channel-SkillsNetworkCoursesIBMDeveloperSkillsNetworkDS0105ENSkillsNetwork984-2022-01-01)\n","\n","\n","\n","## Change Log\n","\n","| Date (YYYY-MM-DD) | Version | Changed By | Change Description                 |\n","| ----------------- | ------- | ---------- | ---------------------------------- |\n","| 2022-09-30        | 0.1     | Lakshmi Holla     | Created Initial version    |\n","\n","\n","## \u003ch3 align=\"center\"\u003e © IBM Corporation 2022. All rights reserved. \u003ch3/\u003e\n"]}],"metadata":{"kernelspec":{"display_name":"Python","language":"python","name":"conda-env-python-py"},"language_info":{"name":""}},"nbformat":4,"nbformat_minor":4}"